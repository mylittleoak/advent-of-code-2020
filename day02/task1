const fs = require('fs');
const aInput = fs.readFileSync('./day02/input.txt',{encoding:'utf-8'}).split('\n');

let count = 0;
for (let row in aInput){
    let r = aInput[row].replace('-',' ').replace(':','').split(' ');
    let c = r[3].length - r[3].replace(new RegExp(r[2], 'g'),'').length
    if (c >= r[0] && c <= r[1]) { count++ }
}

console.log(count)


// so I went with replacing '-' with a space and then removing the ':' and then splitting by space into an array
// then I removed the instances of the find character and took the length of that string from the original length
// this tells me how many characters were originally there
// then it's just a case of looking against the min and max that went into the array from the split
// :-)
